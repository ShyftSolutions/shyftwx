import { FeatureCollection, LineString } from 'geojson';
import { ImpactedRoute, RouteImpactDataSegment, SimpleShyftRoute } from './index';
export declare const routes: ShyftRoute[];
export declare function getSelectedRoute(): ShyftRoute | undefined;
export declare function setSelectedRoute(selectedRoute: ShyftRoute | undefined): void;
export declare class ShyftRoute {
    _impactedRoutes: Record<string, ImpactedRoute>;
    _activeRoute: ImpactedRoute;
    _impactData: Record<string, RouteImpactDataSegment[]>;
    _rawRoute: FeatureCollection;
    _selected: boolean;
    _loaded: boolean;
    constructor(start: string, end: string, geometry: LineString, date: Date);
    _start: string;
    get start(): string;
    _end: string;
    get end(): string;
    _geometry: LineString;
    get geometry(): LineString;
    _startTime: Date;
    get startTime(): Date;
    get id(): string;
    _forecasts: number;
    _endingTime: Date;
    set endingTime(d: Date);
    get endingTime(): Date;
    get impactData(): Record<string, RouteImpactDataSegment[]>;
    toSimpleObject(): SimpleShyftRoute;
    applyImpactsAsync(dispatch: any): Promise<void>;
}
export default ShyftRoute;
